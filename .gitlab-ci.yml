stages:
  # - lint
  - frontend-test
  - backend-test
  # - build
  - codequality
  # - deploy

# lint:
#   stage: lint
#   image: node:latest
#   only:
#     - master
#     - DisableCypressInCI
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - ./client/node_modules/
#       - ./server/node_modules/
#   script:
#     # Install eslint
#     - npm config set registry https://registry.npm.taobao.org
#     - cd client
#     - |
#       npm install --ignore-scripts --save-dev \
#       @vue/cli-plugin-eslint \
#       @vue/eslint-config-standard \
#       babel-eslint \
#       eslint \
#       eslint-plugin-import \
#       eslint-plugin-node \
#       eslint-plugin-promise \
#       eslint-plugin-standard \
#       eslint-plugin-vue \
#       stylelint \
#       stylelint-config-standard
#     # Run eslint
#     - node_modules/.bin/eslint src
#     - node_modules/.bin/stylelint src --fix
#     - cd ../server
#     - |
#       npm install --ignore-scripts --save-dev \
#       eslint \
#       eslint-plugin-import \
#       eslint-plugin-node \
#       eslint-plugin-promise \
#       eslint-config-standard
#     - node_modules/.bin/eslint .

frontend-test:
  stage: frontend-test
  image: node:latest
  cache:
    key: "frontend-test"
    paths:
      - ./client/node_modules/
  only:
    - merge_requests   
    - master   
  script:
    - echo "frontend-test"
    - cd client
    - npm install
    - npm run test
  artifacts:
    paths:
      - ./client/test-report.xml
      - ./client/coverage/lcov.info

backend-test:
  stage: backend-test
  image: node:latest
  cache:
    key: "backend-test"
    paths:
      - ./server/node_modules/
  only:
    - merge_requests   
    - master   
  script:
    - echo "backend-test"
    - cd server
    - npm install 
    - npm run test
  artifacts:
    paths:
      - ./server/test-report.xml
      - ./server/coverage/lcov.info 

sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: codequality
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - master # or the name of your main branch
    - merge_requests